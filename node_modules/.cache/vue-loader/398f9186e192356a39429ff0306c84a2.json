{"remainingRequest":"/home/pedro/projects/emojipicker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/pedro/projects/emojipicker/src/components/gif/GifPicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/pedro/projects/emojipicker/src/components/gif/GifPicker.vue","mtime":1710948328878},{"path":"/home/pedro/projects/emojipicker/node_modules/cache-loader/dist/cjs.js","mtime":1710951417708},{"path":"/home/pedro/projects/emojipicker/node_modules/babel-loader/lib/index.js","mtime":1710951419068},{"path":"/home/pedro/projects/emojipicker/node_modules/cache-loader/dist/cjs.js","mtime":1710951417708},{"path":"/home/pedro/projects/emojipicker/node_modules/vue-loader-v16/dist/index.js","mtime":1710951419058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgYXBpS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBzb3VyY2VzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoOiBudWxsLAogICAgICByZXN1bHRzOiBbXSwKICAgICAgdGFnczogW10KICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgZmV0Y2goYGh0dHBzOi8vZy50ZW5vci5jb20vdjEvY2F0ZWdvcmllcz9rZXk9JHt0aGlzLmFwaUtleX1gKQogICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpCiAgICAudGhlbigoeyB0YWdzIH0pID0+IHRoaXMudGFncyA9IHRhZ3MpCiAgfSwKICB3YXRjaDogewogICAgc2VhcmNoOiAnb25TZWFyY2gnLAogIH0sCiAgbWV0aG9kczogewogICAgb25TZWFyY2ggKGtleSkgewogICAgICB0aGlzLmdldChgc2VhcmNoP3E9JHtrZXl9JmxpbWl0PTMyYCwgJ3Jlc3VsdHMnKQogICAgfSwKICAgIHJlbmRlclNtYWxsR2lmICh7IHRpbnlnaWYgfSkgewogICAgICByZXR1cm4gdGlueWdpZi51cmwKICAgIH0sCiAgICByZW5kZXJIdWdlR2lmICh7IG1lZGl1bWdpZiB9KSB7CiAgICAgIHJldHVybiBtZWRpdW1naWYudXJsCiAgICB9LAogICAgZ2V0IChxdWVyeSwga2V5KSB7CiAgICAgIGZldGNoKGBodHRwczovL2cudGVub3IuY29tL3YxLyR7cXVlcnl9JmtleT0ke3RoaXMuYXBpS2V5fWApCiAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKQogICAgICAudGhlbihkYXRhID0+IHRoaXNba2V5XSA9IGRhdGFba2V5XSkKICAgIH0sCiAgICBzZW5kICh1cmwpIHsKICAgICAgdGhpcy4kZW1pdCgnc2VuZCcsIHsgdXJsOiB0aGlzLnJlbmRlckh1Z2VHaWYodXJsKSwgc2VuZDogdHJ1ZSwgdHlwZTogJ2dpZicgfSkKICAgICAgdGhpcy5zZWFyY2ggPSBudWxsCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["/home/pedro/projects/emojipicker/src/components/gif/GifPicker.vue"],"names":[],"mappings":"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","file":"/home/pedro/projects/emojipicker/src/components/gif/GifPicker.vue","sourceRoot":"","sourcesContent":["<template>\n  <div style=\"height: calc(100% - 9px)\">\n    <header class=\"bg-grey-400 px-5 pt-2 pb-5 shadow-lg relative z-1\">\n      <div class=\"flex items-center justify-between w-full\">\n        <div class=\"flex items-center justify-between w-full bg-grey-600 rounded-md overflow-hidden pr-4\">\n          <input v-model=\"search\" class=\"bg-grey-600 w-full text-sm py-2 px-3 text-white outline-none\" placeholder=\"Find the perfect gif\" />\n          <img :src=\"sources.search\" class=\"w-4\" />\n        </div>\n      </div>\n    </header>\n    <div class=\"vue3-discordpicker__container flex\">\n      <div class=\"bg-grey-400 h-full w-full flex flex-col\">\n        <div class=\"overflow-auto relative p-4 h-full w-full\">\n          <div v-if=\"search !== '' && results && results.length\" class=\"grid grid-cols-2 grid-flow-row auto-rows-auto gap-4\">\n            <div\n              v-for=\"(result, r) in results\"\n              :key=\"r\"\n              class=\"h-28 rounded-lg bg-cover text-white flex items-center justify-center relative font-semibold font-xl border-2 border-transparent hover:border-blue transition duration-300 cursor-pointer group z-1 overflow-hidden\"\n              :style=\"`background-image: url(${renderSmallGif(result.media[0])})`\"\n              @click=\"send(result.media[0])\"\n            />\n          </div>\n          <div v-else-if=\"tags && tags.length\" class=\"grid grid-cols-2 grid-flow-row auto-rows-auto\tgap-4\">\n            <div\n              v-for=\"(tag, t) in tags\"\n              :key=\"t\"\n              class=\"vue3-discord-emojipicker__gifimage h-28 rounded-lg bg-cover text-white flex items-center justify-center relative font-semibold font-xl border-2 border-transparent hover:border-blue transition duration-300 cursor-pointer group z-1 overflow-hidden\"\n              :style=\"`background-image: url(${tag.image})`\"\n              @click=\"search = tag.searchterm\"\n            >\n              <div class=\"vue3-discord-emojipicker__gifimage h-full absolute top-0 left-0 bg-black opacity-0 group-hover:opacity-70 transition duration-300 w-full -z-1\">\n              </div>\n              {{ tag.searchterm }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    apiKey: {\n      type: String,\n      required: true\n    },\n    sources: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n      search: null,\n      results: [],\n      tags: []\n    }\n  },\n  mounted () {\n    fetch(`https://g.tenor.com/v1/categories?key=${this.apiKey}`)\n    .then(res => res.json())\n    .then(({ tags }) => this.tags = tags)\n  },\n  watch: {\n    search: 'onSearch',\n  },\n  methods: {\n    onSearch (key) {\n      this.get(`search?q=${key}&limit=32`, 'results')\n    },\n    renderSmallGif ({ tinygif }) {\n      return tinygif.url\n    },\n    renderHugeGif ({ mediumgif }) {\n      return mediumgif.url\n    },\n    get (query, key) {\n      fetch(`https://g.tenor.com/v1/${query}&key=${this.apiKey}`)\n      .then(res => res.json())\n      .then(data => this[key] = data[key])\n    },\n    send (url) {\n      this.$emit('send', { url: this.renderHugeGif(url), send: true, type: 'gif' })\n      this.search = null\n    }\n  }\n}\n</script>"]}]}